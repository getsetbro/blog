<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>getsetblog</title>
    <description>Official blog spot of Seth Broweleit.
</description>
    <link>http://blog.getsetbro.com/</link>
    <atom:link href="http://blog.getsetbro.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 17 Sep 2015 03:03:05 -0500</pubDate>
    <lastBuildDate>Thu, 17 Sep 2015 03:03:05 -0500</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>CSS IS AWESOME or DIVs allow overflow TABLEs do not</title>
        <description>&lt;p&gt;You could say that I have been wanting to write this article for a while from how I &lt;a href=&quot;https://twitter.com/getsetbro/status/120936678981509120&quot;&gt;tweeted it&lt;/a&gt; in 2011. But the idea deserves a longer explanation than what a tweet provides.&lt;/p&gt;

&lt;p&gt;Here is the joke: &lt;img src=&quot;http://getsetbro.com/images/divsallowoverflow/cssisawesome.png&quot; alt=&quot;&amp;quot;css is awesome joke&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I didn’t want to post the picture, but some would not know what I was referring to.&lt;/p&gt;

&lt;p&gt;The - CSS is awesome - joke is not what inspired me to write this article today. So stay tuned until the very end to find what I really wanted to pervey.&lt;/p&gt;

&lt;p&gt;What I was pointing out in 2011 and what I want to expound on today is that the bug shown in the joke is not a CSS issue. It comes from how DIVs allow overflow where TABLEs never did.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://getsetbro.com/images/divsallowoverflow/cssisawesomerin3d.png&quot; alt=&quot;&amp;quot;3d&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am guessing that this joke began when developers stopped using TABLEs and started using DIVs and found that content could overrun the borders.&lt;/p&gt;

&lt;p&gt;This lead them to feel that CSS was indeed NOT AWESOME because it caused problems. But it was the markup all along.&lt;/p&gt;

&lt;h2 id=&quot;but-what-is-the-real-reason-for-this-post&quot;&gt;But what is the real reason for this post?&lt;/h2&gt;

&lt;p&gt;In some cases you might need to use the TABLE layout to avoid this bug that the block-level-DIV has caused.&lt;/p&gt;

&lt;p&gt;Lets say you have a site with a header, main area, and footer. You will probably have some kind of decoration on the header and footer like a background color or borders. Those will go the full width of the page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://getsetbro.com/images/divsallowoverflow/divlayout1.png&quot; alt=&quot;&amp;quot;html&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sometimes for some reason you have to have content that could become wider than the width of the page. And there is nothing you can do about it.&lt;/p&gt;

&lt;p&gt;When you scroll horizontally to see the content that is farther to the right you will find that the header and footer do not continue as far as the content.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://getsetbro.com/images/divsallowoverflow/divlayout2.png&quot; alt=&quot;&amp;quot;scrolled&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;why-did-this-happen&quot;&gt;Why did this happen‽&lt;/h3&gt;

&lt;p&gt;Because the header and footer are block level elements - they are as wide as their parent. The BODY and HTML elements are also block level elements. They are not working like a table. They allow overflow. A table would widen to make sure that it goes all the way around its content - like a mother goose, protecting her young. Even if you set it to be a certain width it would break that rule to hug it’s children.&lt;/p&gt;

&lt;h3 id=&quot;so-what-can-be-done&quot;&gt;So what can be done‽&lt;/h3&gt;

&lt;p&gt;If you want the header and footer to expand to the same width as the other parts of the page you should set there parent to act like a table like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For my example I set it on the BODY element. You can see the &lt;a href=&quot;http://jsbin.com/muyowa/edit?html,css,output&quot;&gt;example bin here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://getsetbro.com/images/divsallowoverflow/cssisawesomewithscroll.png&quot; alt=&quot;&amp;quot;scrolling div&amp;quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Sep 2015 02:00:00 -0500</pubDate>
        <link>http://blog.getsetbro.com/css-is-awesome-or-divs-allow-overflow-tables-do-not.html</link>
        <guid isPermaLink="true">http://blog.getsetbro.com/css-is-awesome-or-divs-allow-overflow-tables-do-not.html</guid>
        
        
      </item>
    
      <item>
        <title>Webapp on Raspberry Pi via the Windows UWP</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://getsetbro.com/images/onraspiviawinuwp/win10iot.png&quot; alt=&quot;Windows 10 IOT boot image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I mentioned in the last post I was going to try deploying our “Vacation Planner” web application to a Raspberry PI. I did try it and it did work. The web-app didn’t need any changes to run on the device. So while I don’t have a list of tweaks needed to make a webapp work on IOT devices I can tell you about some of the gotchas I encountered getting to the place where I could install the web-app.&lt;/p&gt;

&lt;p&gt;If you are unfamiliar with the Windows UWP bridge it’s toolkit enables “you to quickly bring your existing applications to the Universal Windows Platform and Windows Store.” It wraps web-apps so you can deploy it to multiple devices (PCs, tablets, phones, HoloLens, Surface Hub, Xbox, and Raspberry Pi).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://getsetbro.com/images/onraspiviawinuwp/win10devices.png&quot; alt=&quot;Windows 10 Devices&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First thing is to get the win10 IOT operating system on to a sdcard for the Raspberry Pi to run. I already had a build from a couple of months ago but that became a major obstacle when an error told me the debugger version on the device did not match the version of VS on my dev machine. As of today the correct steps are listed here &lt;a href=&quot;http://ms-iot.github.io/content/en-US/win10/SetupRPI.htm&quot;&gt;ms-iot.github.io/content/en-US/win10/SetupRPI.htm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the OS on the sdcard the Raspberry Pi will boot up and grab an IP address over a wired network connection. No wifi support at this time, which is a big barrier for many who wont feel like running a long network cable through their house or office. I, myself, do not mind.&lt;/p&gt;

&lt;aside class=&quot;thumbnail pullright&quot;&gt;
  &lt;img src=&quot;http://getsetbro.com/images/onraspiviawinuwp/winservices.png&quot; alt=&quot;Windows services list&quot; /&gt;
&lt;/aside&gt;
&lt;p&gt;With the Pi on the network you can connect to it from your dev machine. Make sure the Windows Remote Management service is running on the dev system. For me it was off so I had to start it. I chose to have it always start automatically.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Scott Hanselman’s article is accurate for the commands to connect and login: &lt;a href=&quot;http://www.hanselman.com/blog/SettingUpWindows10ForIoTOnYourRaspberryPi2.aspx&quot;&gt;hanselman.com/blog/SettingUpWindows10ForIoTOnYourRaspberryPi2.aspx&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Be aware that to the credentials for the Pi the username is “MINWINPC\administrator” and password is “p@ssw0rd” - some articles I saw did not have the machine name as part of the username in their instructions.&lt;/p&gt;

&lt;p&gt;Scott had all the steps I needed except he was deploying a C# app which has a different manual config screen than what I needed for my remote web-app. For me when I selected the properties of my project it looked like this:
&lt;img src=&quot;http://getsetbro.com/images/onraspiviawinuwp/projectproperties.png&quot; alt=&quot;Project properties&quot; /&gt;
In your setting choose not to use authentication. (shown here &lt;a href=&quot;http://oliviaklose.com/hello-blinky/&quot;&gt;oliviaklose.com/hello-blinky/&lt;/a&gt; )&lt;/p&gt;

&lt;p&gt;The device is serving up a webpage that can be viewed at http://IP.AD.DRE.SS. Once you have deployed you will go to this webpage to &lt;strong&gt;START&lt;/strong&gt; your app - using the webpage interface.&lt;/p&gt;

&lt;p&gt;Heads up: The remote machine IP address setting can get stuck - I had to create a new app when the IP of my device changed.&lt;/p&gt;

&lt;h2 id=&quot;photo-gallery&quot;&gt;Photo gallery&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://getsetbro.com/images/onraspiviawinuwp/kiosk.png&quot; alt=&quot;End result&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;date-picker&quot;&gt;Date Picker&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://getsetbro.com/images/onraspiviawinuwp/datepicker.png&quot; alt=&quot;Date picker in effect&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;deployed&quot;&gt;Deployed&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://getsetbro.com/images/onraspiviawinuwp/deployed.png&quot; alt=&quot;The deployed code output&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 25 Aug 2015 11:00:00 -0500</pubDate>
        <link>http://blog.getsetbro.com/webapp-on-raspberry-pi-via-windows-uwp.html</link>
        <guid isPermaLink="true">http://blog.getsetbro.com/webapp-on-raspberry-pi-via-windows-uwp.html</guid>
        
        
      </item>
    
      <item>
        <title>Your web-app on the Universal Windows Platform - Tested</title>
        <description>&lt;h2 id=&quot;and-found-just-working-tldr&quot;&gt;…and found just-working (TL;DR)&lt;/h2&gt;

&lt;p&gt;Have you seen that you can build great Windows apps with your existing websites? You can take an existing web application and package it for all Windows-based devices including PCs, tablets, phones, HoloLens, Surface Hub, Xbox, and Raspberry Pi (running Windows).&lt;/p&gt;

&lt;p&gt;We (my mobility team at &lt;a href=&quot;http://www.bluemetal.com&quot;&gt;bluemetal&lt;/a&gt;) wanted to test this out and see what the experience was like. Does it just-work or does take a lot of tweaks and massaging to make it usable?&lt;/p&gt;

&lt;h2 id=&quot;the-web-app-we-used&quot;&gt;The web-app we used&lt;/h2&gt;
&lt;p&gt;As a plain web-app the “Vacation Planner” that we used is a single page built with HTML5, CSS3, and JavaScript. The data entered into the app is stored in the localStorage of the browser. The function of the app is to give users a way to track and keep track of their own time-off and holiday data year over year.&lt;/p&gt;

&lt;p&gt;The UI is responsive, it works at any width and will adapt when the boundaries are resized. Make sure your web-app is responsive, it is going to need to flex to any width as it gets deployed across the Windows devices.&lt;/p&gt;

&lt;p&gt;For this article we tested the “Vacation Planner” as a Windows desktop app. I hope to write next about the success we had putting on a Raspberry Pi.&lt;/p&gt;

&lt;h2 id=&quot;the-web-app-in-the-uwp&quot;&gt;The web-app in the UWP&lt;/h2&gt;
&lt;p&gt;With the uwp &lt;strong&gt;Bridge&lt;/strong&gt; (Project Westminster) the web-app is wrapped as a Windows Native app. When the app is opened on Windows 10 it contains all of the web-app functions but it is enhanced with some Windows only features: Live Tile updates, Active Notifications, Cortana integration, and date-pickers.&lt;/p&gt;

&lt;h2 id=&quot;how-we-did-it&quot;&gt;How we did it&lt;/h2&gt;
&lt;p&gt;The web-app was built for the web with web code, as stated above. It was then deployed online, hosted with github-pages, if you care to know. It lives there and can be viewed and used from any modern-ish browser.&lt;/p&gt;

&lt;p&gt;First step was to consume it as a uwp and test it without any Windows specific enhancements. That step is well documented here:
&lt;a href=&quot;http://microsoftedge.github.io/Web-AppsDocs/en-US/win10/CreateHWA.htm#follow-these-steps-to-convert-a-website-into-an-web-app-on-windows&quot;&gt;steps-to-convert-a-website-into-an-web-app&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The gist of it is you empty out your solution in Visual Studio and point it the URL of your web-app.
&lt;img src=&quot;http://getsetbro.com/images/yourapponuwp/sln.png&quot; alt=&quot;alt text&quot; title=&quot;Empty VS Solution&quot; /&gt;
I hope you notice that there is not much there, and there is not going to be. It’s still on github-pages, or wherever you host yours, and it will stay there. The beauty of it is that changes can continue to be made to the source and the uwp app will pull down the latest code. No need to re-submit your app to the Windows Store.&lt;/p&gt;

&lt;h2 id=&quot;land-and-expand&quot;&gt;Land and expand&lt;/h2&gt;
&lt;p&gt;Once we saw the web-app was just as usable in it’s uwp app version we could start to enhance it with the Windows API. We integrated date-pickers, Live Tile updates, Active Notifications, and Cortana.&lt;/p&gt;

&lt;h3 id=&quot;date-picker&quot;&gt;Date Picker&lt;/h3&gt;
&lt;p&gt;A quick hit was to get the date pickers working. For that we just made sure that our input fields in HTML had “date” as their type. Any date-picker polyfills should be deactivated.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://getsetbro.com/images/yourapponuwp/dateinput.png&quot; alt=&quot;alt text&quot; title=&quot;Native Windows date-picker&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;using-the-windows-api-in-your-web-app-js&quot;&gt;Using the Windows API in your web-app JS&lt;/h4&gt;
&lt;p&gt;Like I have indicated, integrating these platform utilities works as promised but they should be hidden from browsers. You only want Windows to find them. So with this IF statement you can keep your Windows API code from breaking in browsers:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Only a Windows platform will pass the IF test and continue into the code.&lt;/p&gt;

&lt;h3 id=&quot;live-tile&quot;&gt;Live Tile&lt;/h3&gt;
&lt;p&gt;We got the code for the Live Tile from:
&lt;a href=&quot;https://gist.github.com/seksenov/5270d534fad70e98054b&quot;&gt;gist.github.com/seksenov/…&lt;/a&gt; and added a button to the app to run the “updateTile” function.&lt;/p&gt;

&lt;p&gt;Guess what… it worked.
&lt;img src=&quot;http://getsetbro.com/images/yourapponuwp/liveTile.png&quot; alt=&quot;alt text&quot; title=&quot;Live Tile&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;active-notifications-toasts&quot;&gt;Active Notifications (Toasts)&lt;/h3&gt;
&lt;p&gt;Getting this going was as easy as copy and pasting from an example that devs from the Windows team had posted:
&lt;a href=&quot;https://gist.github.com/seksenov/2a08ea82483a0578d1aa&quot;&gt;gist.github.com/seksenov/…&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Yes it worked ootb but we decided to only show the toast if Cortana had detected and captured a phrase with speech recognition
&lt;img src=&quot;http://getsetbro.com/images/yourapponuwp/toast.png&quot; alt=&quot;alt text&quot; title=&quot;Toast&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;cortana&quot;&gt;Cortana&lt;/h3&gt;
&lt;p&gt;Getting Cortana working took a few more steps than the others, there are more files involved. Luckily &lt;a href=&quot;https://twitter.com/k_seks&quot;&gt;Kiril Seksenov&lt;/a&gt; had examples of these too, you might want to bookmark his gist page so you see all of them: &lt;a href=&quot;https://gist.github.com/seksenov&quot;&gt;gist.github.com/seksenov&lt;/a&gt;. There is one for media capture that we didn’t use yet.&lt;/p&gt;

&lt;h4 id=&quot;steps&quot;&gt;Steps&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Add a vcd.xml file to your site &lt;a href=&quot;https://gist.github.com/seksenov/17032e9a6eb9c17f88b5#file-vcd-xml&quot;&gt;gist.github.com/seksenov/…#file-vcd-xml&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Point to the vcd.xml file in the head of your web-app &lt;a href=&quot;https://gist.github.com/seksenov/17032e9a6eb9c17f88b5#file-cortana-html&quot;&gt;gist.github.com/seksenov/…#file-cortana-html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Do something in your app when the commands come in from Cortana &lt;a href=&quot;https://gist.github.com/seksenov/17032e9a6eb9c17f88b5#file-cortana-js&quot;&gt;gist.github.com/seksenov/…#file-cortana-js&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://getsetbro.com/images/yourapponuwp/cortana.png&quot; alt=&quot;alt text&quot; title=&quot;Cortana&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;

&lt;h3 id=&quot;windows-10-iot&quot;&gt;Windows 10 IOT&lt;/h3&gt;

&lt;p&gt;Next we will install the Vacation Planner UWP app on a Raspberry Pi running Windows 10 IOT. Wish us luck and check back for the results.&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Aug 2015 05:00:00 -0500</pubDate>
        <link>http://blog.getsetbro.com/Your-webapp-on-the-UWP-Tested.html</link>
        <guid isPermaLink="true">http://blog.getsetbro.com/Your-webapp-on-the-UWP-Tested.html</guid>
        
        
      </item>
    
      <item>
        <title>Windows 10 UWP apps Q&#39;s and A&#39;s</title>
        <description>&lt;h3 id=&quot;q-how-do-you-start-a-js-win10-uwp-app&quot;&gt;Q: How do you start a JS win10 uwp ​​app?​&lt;/h3&gt;
&lt;p&gt;A: It starts with a default html page (no CSS needed) and a default JS file. The JS file has boilerplate code to initialize the app and get the basic controls running.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;q-how-do-you-add-a-page&quot;&gt;Q: How do you add a page?​​​​​​&lt;/h3&gt;
&lt;p&gt;A: -PageControls- are 3 files (html, css, js) and should go in their own folder in the PAGES folder:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;pages / home / home.html&lt;/li&gt;
  &lt;li&gt;pages / home / home.css&lt;/li&gt;
  &lt;li&gt;pages / home / home.js&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;q-how-do-navigate-from-page-to-page&quot;&gt;Q: How do navigate from page to page?​​​&lt;/h3&gt;
&lt;p&gt;A: Program the links to run&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;WinJS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Navigation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;navigate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/pages/page2/page2.html&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​​&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;WinJS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Navigation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;navigate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​​&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;q-how-do-i-layout-items-so-they-fit-and-scroll-like-a-native-app&quot;&gt;Q: How do I layout items so they fit and scroll like a native app&lt;/h3&gt;
&lt;p&gt;A: With custom CSS3, using things like flexbox or height: calc( 100% - 20px ​)&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;more-to-come&quot;&gt;…more to come…&lt;/h5&gt;
</description>
        <pubDate>Wed, 19 Aug 2015 06:00:00 -0500</pubDate>
        <link>http://blog.getsetbro.com/Windows-10-UWP-apps-Qs-and-As.html</link>
        <guid isPermaLink="true">http://blog.getsetbro.com/Windows-10-UWP-apps-Qs-and-As.html</guid>
        
        
      </item>
    
      <item>
        <title>Beginners Log of the Raspberry Pi 2</title>
        <description>&lt;h2 id=&quot;log&quot;&gt;Log&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;I do not yet have a wifi adapter so I plugged the PI into my router&lt;/li&gt;
  &lt;li&gt;On a Mac I tried “ssh pi@raspberrypi.lan” but I got “ssh: Could not resolve hostname raspberrypi.lan: nodename nor servname provided, or not known”&lt;/li&gt;
  &lt;li&gt;I could see on my router app the IP of the PI so I was able to connect with “ssh pi@192.168.1.12”&lt;/li&gt;
  &lt;li&gt;The default password was “raspberry” for the user “pi”&lt;/li&gt;
  &lt;li&gt;I typed “sudo raspi-config” and the config UI showed up in my terminal app&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I found this helpful guide for the config menu&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;Expand Filesystem: no need to do this — some may disagree on this point&lt;/li&gt;
    &lt;li&gt;Change User Password: up to you&lt;/li&gt;
    &lt;li&gt;Enable Boot to Desktop/Scratch: by &lt;em&gt;default&lt;/em&gt;, this is set to console, which is what we want to keep&lt;/li&gt;
    &lt;li&gt;Internationalisation Options: set your timezone (if in the US, choose America, then find the correct city with your timezone)&lt;/li&gt;
    &lt;li&gt;Enable Camera: &lt;em&gt;no&lt;/em&gt; (you can always change this later)&lt;/li&gt;
    &lt;li&gt;Add to Rastrack: &lt;em&gt;no&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;Overclock: this is up to you, I usually choose Medium, which makes the Pi run a little bit faster at the expense of power and potential component damange&lt;/li&gt;
    &lt;li&gt;Advanced options: &lt;em&gt;choose A4 SSH&lt;/em&gt; - this will enable secure shell access, which means that you can control your Raspberry Pi from a remote computer (extremely useful)&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Number 8 was done for me&lt;/li&gt;
  &lt;li&gt;I set the timezone&lt;/li&gt;
  &lt;li&gt;I ran “sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade”&lt;/li&gt;
  &lt;li&gt;I indeed have wheezy and I have ARM hardware as shown by these lines:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Hit&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raspberrypi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collabora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wheezy&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Release&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Hit&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;archive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raspberrypi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wheezy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;armhf&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Packages&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;to-open-config-files-in-the-nano-editor&quot;&gt;To open config files in the nano editor&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;network “sudo nano /etc/network/interfaces”&lt;/li&gt;
  &lt;li&gt;keyboard “sudo nano /etc/default/keyboard”&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;log-continued&quot;&gt;Log continued…&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;When using my keyboard I noticed some characters weren’t what I typed&lt;/li&gt;
  &lt;li&gt;In the keyboard file I change XKBLAYOUT from “gb” to “us”&lt;/li&gt;
  &lt;li&gt;nano is a simple built-in editor. Type in ctrl-X and Y then enter to overwrite to save the file.&lt;/li&gt;
  &lt;li&gt;Make these keyboard changes take effect by rebooting: “sudo reboot”&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;list-of-commands-to-know&quot;&gt;List of commands to know&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;“sudo raspi-config” This opens the configuration screen for the operating system&lt;/li&gt;
  &lt;li&gt;power off “sudo poweroff”&lt;/li&gt;
  &lt;li&gt;“sudo shutdown -h now” (or sudo halt)&lt;/li&gt;
  &lt;li&gt;reboot “sudo reboot” or “sudo shutdown -r now”&lt;/li&gt;
  &lt;li&gt;apt-get update   &amp;lt;–updates the list&lt;/li&gt;
  &lt;li&gt;apt-get upgrade    &amp;lt;–installs the updates&lt;/li&gt;
  &lt;li&gt;apt-get autoclean   &amp;lt;–cleans up afterwards if necessary&lt;/li&gt;
  &lt;li&gt;You can substitute “aptitude” for “apt-get.” Aptitude is an Ncurses viewer of packages installed or available. Aptitude can be used from the command line in a similar way to apt-get. See man aptitude for more information.&lt;/li&gt;
  &lt;li&gt;“startx” start GUI from prompt&lt;/li&gt;
  &lt;li&gt;“lsusb” to display a list of usb devices&lt;/li&gt;
  &lt;li&gt;“ls” command can be used to list items attached&lt;/li&gt;
  &lt;li&gt;“cat /proc/cpuinfo” display hardware info&lt;/li&gt;
  &lt;li&gt;“cat /proc/meminfo” displays details about the Raspberry Pi’s memory&lt;/li&gt;
  &lt;li&gt;“cat /proc/partitions” reveals the size and number of partitions on your SD card or HDD&lt;/li&gt;
  &lt;li&gt;“cat /proc/version” shows you which version of the Pi you are using.&lt;/li&gt;
  &lt;li&gt;“vcgencmd measure_temp” vcgencmd series of commands, which can reveal things like CPU temperature&lt;/li&gt;
  &lt;li&gt;To check all your environment variables “env”&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;log-continued-1&quot;&gt;Log continued…&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;I want to play sound through the audio jack&lt;/li&gt;
  &lt;li&gt;Check to see if sound is ready&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;lsmod | grep snd_bcm2835&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;It shows bcm2835 is there&lt;/li&gt;
  &lt;li&gt;Grab a WAV file “wget http://www.freespecialeffects.co.uk/soundfx/computers/bleep_01.wav”&lt;/li&gt;
  &lt;li&gt;Play it using “aplay bleep_01.wav”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Play mp3 files&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To play mp3s “sudo apt-get -y install mpg321”&lt;/li&gt;
  &lt;li&gt;Get an mp3 “wget http://www.freespecialeffects.co.uk//soundfx/various/fire_burning.mp3”&lt;/li&gt;
  &lt;li&gt;Play “mpg321 fire_burning.mp3”&lt;/li&gt;
  &lt;li&gt;Play with volume at 50% “mpg321 -g 50 fire_burning.mp3”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Installing NodeJS&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Latest stable node.js package available from the node-arm site “wget http://node-arm.herokuapp.com/node_latest_armhf.deb”&lt;/li&gt;
  &lt;li&gt;Install it “sudo dpkg -i node_latest_armhf.deb”&lt;/li&gt;
  &lt;li&gt;Check to see if we get a version number “node -v” it says “v0.12.1”&lt;/li&gt;
  &lt;li&gt;Check NPM “npm -v” it says “2.5.1”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using NodeJS&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Another check to see Node working is to type “node” and then at the prompt “new Date()” it says “Sun May 31 2015 09:25:09 GMT-0500 (CDT)”&lt;/li&gt;
  &lt;li&gt;After SSH we are in /home/pi folder&lt;/li&gt;
  &lt;li&gt;Make a directory called node_programs “mkdir node_programs”&lt;/li&gt;
  &lt;li&gt;Change directory to node_programs “cd node_programs”&lt;/li&gt;
  &lt;li&gt;Make and change to new folder helloworld “mkdir helloworld &amp;amp;&amp;amp; cd helloworld”&lt;/li&gt;
  &lt;li&gt;Initialize a new node project here “npm init” and click enter through all the prompts&lt;/li&gt;
  &lt;li&gt;Start an empty file named index.js “nano index.js” - the nano editor opens to a blank file.&lt;/li&gt;
  &lt;li&gt;CTRL + X to exit, Y selects Yes, and Enter completes and closes it.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;for-setting-a-static-ip-address&quot;&gt;For setting a static IP address&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Get the needed numbers below by typing “ifconfig” and “netstat -nr”&lt;/li&gt;
  &lt;li&gt;Typed “sudo nano /etc/network/interfaces”&lt;/li&gt;
  &lt;li&gt;Changed this:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eth0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hotplug&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eth0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eth0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manual&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wlan0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hotplug&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wlan0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wlan0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manual&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;To this:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eth0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hotplug&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eth0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eth0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dhcp&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wlan0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hotplug&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wlan0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wlan0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;static&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;192&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;168&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;185&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;something&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;higher&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;than&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dhcp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;devices&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;netmask&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;192&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;168&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;192&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;168&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gateway&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;192&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;168&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;“sudo reboot” - once back in run “ifconfig” to reveal your new settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;misc&quot;&gt;Misc&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Installed Chromium “sudo apt-get install chromium-browser”&lt;/li&gt;
  &lt;li&gt;Chromium in Kiosk Mode: “chromium –kiosk http://www.google.com” - ALT + F4 to close it&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;add-a-user&quot;&gt;Add a user&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;“sudo adduser admin” follow the prompts to complete the new user&lt;/li&gt;
  &lt;li&gt;as pi “sudo su” and then run “visudo” which allows you to edit the /etc/sudoers file. add a line exactly matching the one for pi&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;Use nodejs to play a mp3&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“npm install mpg321” in the node program folder created above&lt;/li&gt;
  &lt;li&gt;Put an mp3 in the current folder “wget http://www.freespecialeffects.co.uk//soundfx/various/fire_burning.mp3”&lt;/li&gt;
  &lt;li&gt;Open to edit the index.js file “nano index.js”&lt;/li&gt;
  &lt;li&gt;Paste the following:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mpg321&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mpg321&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mpg321&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infinity&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./fire_burning.mp3&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SIGINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stops&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;running&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terminal&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;SIGINT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Run the index.js file with node “node index.js”&lt;/li&gt;
  &lt;li&gt;The mp3 plays through the audio jack&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 30 May 2015 06:00:00 -0500</pubDate>
        <link>http://blog.getsetbro.com/beginners-log-of-the-raspberry-pi-2.html</link>
        <guid isPermaLink="true">http://blog.getsetbro.com/beginners-log-of-the-raspberry-pi-2.html</guid>
        
        
      </item>
    
      <item>
        <title>Bookmarklet to make your browser a Text Editor</title>
        <description>&lt;p&gt;It is a link/bookmarklet that opens a browser window/tab with a big content-editable region so you can start typing some notes, thoughts, ideas, quotes… you get it.&lt;/p&gt;

&lt;p&gt;&lt;a title=&quot;Open as Text Editor&quot; target=&quot;_blank&quot; href=&quot;data:text/html;charset=utf-8,%20%3ctitle%3eTextEditor%3c/title%3e%3cbody%20contenteditable%20style=%22font-size:2rem;font-family:monaco;line-height:1.4;max-width:60rem;margin:0%20auto;padding:4rem;%22%20spellcheck=%22false%22%3e%3ch1%3eText%20Editor%3c/h1%3e%3cp%3eStart%20Here.&quot;&gt;Open my browser as a Text Editor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is where it started, as far as I know &lt;a href=&quot;https://coderwall.com/p/lhsrcq&quot; target=&quot;_blank&quot;&gt;LINK.&lt;/a&gt; If you read the comments you can find a bunch of variations. Some that will save your typing to localStorage so closing the window does not loose your stuff.&lt;/p&gt;

&lt;p&gt;Here is the code in the link I pasted above.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;data:text/html;charset=utf-8,%20&amp;lt;title&amp;gt;TextEditor&amp;lt;/title&amp;gt;&amp;lt;body%20contenteditable%20style=&quot;font-size:2rem;font-family:monaco;line-height:1.4;max-width:60rem;margin:0%20auto;padding:4rem;&quot;%20spellcheck=&quot;false&quot;&amp;gt;&amp;lt;h1&amp;gt;Text%20Editor&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Start%20Here.&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;update&quot;&gt;Update&lt;/h3&gt;

&lt;p&gt;Newer hotterness&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;data:text/html;charset=utf-8,&amp;lt;title&amp;gt;TextArea&amp;lt;/title&amp;gt;&amp;lt;style&amp;gt;html{height: 100%;}body{margin:0;padding:4%;border:20px solid #eee;background-color:#fff;border-radius:2em}textarea{width:100%;height:100%;border:0 none;font-family:&amp;quot;Lucida Grande&amp;quot;,sans-serif;font-size:2em;outline:none;color:#444}&amp;lt;/style&amp;gt;&amp;lt;body&amp;gt;&amp;lt;textarea spellcheck=&amp;quot;false&amp;quot; autofocus=&amp;apos;autofocus&amp;apos;&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Tue, 26 May 2015 07:00:00 -0500</pubDate>
        <link>http://blog.getsetbro.com/Bookmarklet-to-make-your-browser-a-Text-Editor.html</link>
        <guid isPermaLink="true">http://blog.getsetbro.com/Bookmarklet-to-make-your-browser-a-Text-Editor.html</guid>
        
        
      </item>
    
      <item>
        <title>Override Windows fast-startup option</title>
        <description>&lt;h2 id=&quot;windows-has-a-fast-startup-option-which-makes-it-hard-to-boot-into-bios&quot;&gt;Windows has a fast-startup option which makes it hard to boot into bios.&lt;/h2&gt;

&lt;p&gt;I stroubled to get the tablet in to the boot menu for a while until I found info on this forum: 
&lt;a href=&quot;//forum.tabletpcreview.com/acer-gateway/40963-how-enter-into-iconia-w500s-bios-settings.html&quot; target=&quot;_blank&quot;&gt;forum.tabletpcreview.com/acer-gateway/40963-how-enter-into-iconia-w500s-bios-settings.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;“If you have the Windows 8 Developer Preview installed, you will not be able to boot up the bios screen the normal way, as Win 8 has a fast-startup option that overrides it.”
so find the “disable fast startup” option.&lt;/p&gt;

&lt;p&gt;If this helps just one person it is worth it. That person might be me.&lt;/p&gt;

&lt;h2 id=&quot;to-disable-the-fast-startup-in-windows&quot;&gt;To Disable the fast startup in windows:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;In power options, “Choose what the Power buttons do”&lt;/li&gt;
  &lt;li&gt;Then click “Change settings that are currently unavailable”&lt;/li&gt;
  &lt;li&gt;Then scroll down to to the shutdown setting and disable fast startup.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;then-you-will-be-able-to-use-the-documented-steps-to-get-to-the-bios&quot;&gt;Then you will be able to use the documented steps to get to the bios.&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Power button + windows button at the same time.&lt;/li&gt;
  &lt;li&gt;Then press F2 when you see the cursor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you do not press F2 quickly enough it will boot into Windows.&lt;/p&gt;

&lt;p&gt;Remember you will need a usb drive that has been prepared to be bootable, not just a iso file on a drive.&lt;/p&gt;
</description>
        <pubDate>Tue, 26 May 2015 06:00:00 -0500</pubDate>
        <link>http://blog.getsetbro.com/Override-Windows-fast-startup-option.html</link>
        <guid isPermaLink="true">http://blog.getsetbro.com/Override-Windows-fast-startup-option.html</guid>
        
        
      </item>
    
      <item>
        <title>Prototype Driven Development</title>
        <description>&lt;p&gt;Prototype Driven Development provides quick testing of UI components.&lt;/p&gt;

&lt;p&gt;Remember how Sketch Flow was made in a way that the effort put into creating wireframes for a SilverLight project would not be throw-away work? No? Well the concept was great. Let’s do that with Prototypes for web app development.&lt;/p&gt;

&lt;p&gt;Prototypes are more valuable than wireframes or designs. You will see that requirements change once clients can touch what it is that they have requested you build for them. “Oh it responds like that? Can you just make that different?”&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#prototyping&quot;&gt;Prototyping&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#build-system&quot;&gt;Build System&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#javascript&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#css&quot;&gt;CSS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#svg--icon-font-opinions&quot;&gt;SVG &amp;amp; Icon font opinions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ps&quot;&gt;PS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;prototyping&quot;&gt;Prototyping&lt;/h3&gt;

&lt;p&gt;A prototype will provide proof of concepts and be a source of documentation throughout the project.&lt;/p&gt;

&lt;p&gt;Proper setup of build tools means that the code in the prototype will be the same code in production.&lt;/p&gt;

&lt;p&gt;Example: &lt;a href=&quot;//demo.patternlab.io&quot;&gt;PatternLab&lt;/a&gt;. Shows the single components, components in groups, and shows the code used to build them. It shows the components alone as well as next to other components. It shows if a component is ready for re-use.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;//demo.patternlab.io/?p=molecules-comment-form&quot; target=&quot;_blank&quot;&gt;single-form&lt;/a&gt; |
&lt;a href=&quot;//demo.patternlab.io/?p=organisms-comment-thread&quot; target=&quot;_blank&quot;&gt;comment-thread&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&quot;http://demo.patternlab.io/?p=molecules-comment-form&quot; style=&quot;border: 1px solid rgb(170, 170, 170); width: 100%; min-height: 300px;&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;build-system&quot;&gt;Build System&lt;/h3&gt;

&lt;p&gt;With an enhanced build system we can build the Prototype + Style Guide alongside our project in VS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installs&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Git&lt;/strong&gt;. Needed to “Git” things from the web. - &lt;a href=&quot;//msysgit.github.io&quot;&gt;//msysgit.github.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt;. &lt;a href=&quot;//nodejs.org&quot;&gt;//nodejs.org&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Once installed you can “Git” other things with npm:&lt;/li&gt;
      &lt;li&gt;No Ruby, PHP, or Java needed&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gulp or Grunt&lt;/strong&gt; or both: “Automation, performing repetitive tasks”
    &lt;ul&gt;
      &lt;li&gt;minification, concatenation…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pattern Lab&lt;/strong&gt; (node version)
    &lt;ul&gt;
      &lt;li&gt;Builds a Prototype as well as a &lt;a href=&quot;//demo.patternlab.io/styleguide/html/styleguide.html&quot;&gt;Style Guide&lt;/a&gt;!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Optional&lt;/strong&gt; add-ons for VS (works on VS 2013):
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;//visualstudiogallery.msdn.microsoft.com/8e1b4368-4afb-467a-bc13-9650572db708&quot;&gt;Task Runner Explorer&lt;/a&gt; - See tasks in a VS explorer window.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;//visualstudiogallery.msdn.microsoft.com/65748cdb-4087-497e-a394-2e3449c8e61e&quot;&gt;Package Intellisense&lt;/a&gt; NPM and Bower packages directly with Intellisense.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;//visualstudiogallery.msdn.microsoft.com/dcbc5325-79ef-4b72-960e-0a51ee33a0ff&quot;&gt;Grunt Launcher&lt;/a&gt; - Launch Grunt, Gulp and Bower commands in Visual Studio.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Why not Nuget and MSBuild? &lt;a href=&quot;//www.hanselman.com/blog/IntroducingGulpGruntBowerAndNpmSupportForVisualStudio.aspx&quot;&gt;Hanselman answered&lt;/a&gt;. “Because there’s already a rich ecosystem for this kind of thing. NuGet is great for server side libraries (and some client-side) but there are so many more CSS and JS libs on npm and bower. MSBuild is great for server-side builds but can be overkill when building a client-side app.”&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;javascript&quot;&gt;JavaScript&lt;/h3&gt;

&lt;p&gt;We’ll need some JS Patterns to avoid conflicts so components can be reusable. If two components want to save a number to a variable named “width” then the last one to define it will win. And the app will lose.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Modular Pattern&lt;/strong&gt;
&lt;a href=&quot;//jsbin.com/lumeqa/7/edit?html,js,output&quot;&gt;//jsbin.com/lumeqa/12/edit?html,js,output&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&quot;//jsbin.com/lumeqa/12/embed?js&quot; class=&quot;&quot; style=&quot;border: 1px solid rgb(170, 170, 170); width: 100%; min-height: 300px;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Or just use the jQuery plug-in format.
&lt;a href=&quot;//jsbin.com/lumeqa/8/edit?html,js,output&quot;&gt;//jsbin.com/lumeqa/14/edit?html,js,output&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&quot;//jsbin.com/lumeqa/14/embed?js&quot; class=&quot;&quot; style=&quot;border: 1px solid rgb(170, 170, 170); width: 100%; min-height: 300px;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Elements affected by JS should have separate css classes that look different: “js-icon” or potentially data-attributes. That way you can safely change style classes but carefully change JS classes.&lt;/p&gt;

&lt;p&gt;Example(s)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&amp;lt; i class=”icon-class js-icon” data-icon=”iconJS” &amp;gt;&lt;/li&gt;
  &lt;li&gt;$(“.js-icon”).on(…);&lt;/li&gt;
  &lt;li&gt;$(“[data-icon]”).on(…);&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;iframe src=&quot;//jsbin.com/lumeqa/11/embed?html,js&quot; class=&quot;&quot; style=&quot;border: 1px solid rgb(170, 170, 170); width: 100%; min-height: 300px;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;css&quot;&gt;CSS&lt;/h3&gt;

&lt;p&gt;As a base use the latest bootstrap. Everybody learn bootstrap. They have put much time into finding the configuration that works best for the web today. You can transfer your knowledge to other UI frameworks later.&lt;/p&gt;

&lt;p&gt;If you want different margins then customize bootstrap before you download it. Only build something new if bootstrap does not provide it - it usually does provide it. Then when we do need to create something new use conventions. Building without a having reuse in mind is a shot in the foot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conventions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SUIT CSS is a reliable and testable styling methodology for component-based UI development. The SUIT CSS naming convention helps to scope component CSS and make your widgets render more predictably.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;.ComponentName&lt;/strong&gt; “Article”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;.ComponentName–modifierName&lt;/strong&gt; “Article–black”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;.ComponentName-descendentName&lt;/strong&gt; “Article-title”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;.u-utilityName&lt;/strong&gt; “u-floatLeft”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;.is-stateName&lt;/strong&gt; “is-selected”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;“The component’s name must be written in pascal case. Nothing else in the HTML/CSS uses pascal case.” &lt;a href=&quot;//github.com/suitcss/suit/blob/master/doc/naming-conventions.md&quot; target=&quot;_blank&quot;&gt;SUIT CSS naming-conventions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For a full demo see: &lt;a href=&quot;//jsbin.com/lumeqa/2/&quot;&gt;//jsbin.com/lumeqa/2/&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&quot;//jsbin.com/lumeqa/10/embed?html&quot; class=&quot;&quot; style=&quot;border: 1px solid rgb(170, 170, 170); width: 100%; min-height: 300px;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br /&gt;
It is a learning curve for sure but the results are worth it. This will scale from small to large projects and make for happier teams.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;svg--icon-font-opinions&quot;&gt;SVG &amp;amp; Icon font opinions&lt;/h3&gt;

&lt;p&gt;No more IMG for icons.&lt;/p&gt;

&lt;p&gt;Font icons are easy to use. Their icons pick up the font color. I very really like icomoon &lt;a href=&quot;//icomoon.io&quot;&gt;//icomoon.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But SVG wins the cagematch: &lt;a href=&quot;//css-tricks.com/icon-fonts-vs-svg&quot;&gt;//css-tricks.com/icon-fonts-vs-svg&lt;/a&gt; Automated grunt task. SVG can be animated. &lt;a href=&quot;//grunticon.com&quot;&gt;//grunticon.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All browsers since IE9 do SVG so it’s time to adopt. &lt;a href=&quot;//caniuse.com/#feat=svg&quot;&gt;//caniuse.com/#feat=svg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What does SVG look like in my code? &lt;a href=&quot;//jsbin.com/nufuqi/1/edit&quot;&gt;//jsbin.com/nufuqi/2/edit&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&quot;//jsbin.com/nufuqi/2/embed?html,output&quot; class=&quot;&quot; style=&quot;border: 1px solid rgb(170, 170, 170); width: 100%; min-height: 300px;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Since you do not like that all of that SVG code move the SVG code to a re-usable block and pull it in with the USE element &lt;a href=&quot;//jsbin.com/nufuqi/1/edit&quot;&gt;//jsbin.com/nufuqi/3/edit&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&quot;//jsbin.com/nufuqi/3/embed?html,output&quot; class=&quot;&quot; style=&quot;border: 1px solid rgb(170, 170, 170); width: 100%; min-height: 300px;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;SVG sprites so the code stays clean and repurposable: &lt;a href=&quot;//css-tricks.com/svg-sprites-use-better-icon-fonts&quot;&gt;//css-tricks.com/svg-sprites-use-better-icon-fonts&lt;/a&gt; and &lt;a href=&quot;//css-tricks.com/svg-symbol-good-choice-icons/&quot;&gt;//css-tricks.com/svg-symbol-good-choice-icons/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How might I make a shape? &lt;a href=&quot;//blog.getsetbro.com/js/the-svg-tutorial-that-will-make-it-click.html&quot;&gt;//blog.getsetbro.com/js/the-svg-tutorial-that-will-make-it-click.html&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;ps&quot;&gt;PS&lt;/h3&gt;

&lt;p&gt;A thought about the teams who build this. Often a “front-end” team builds the prototype and hands it off for it to be integrated into production by the “back-end” team.
This might lead to the second team finding that the components have bugs after integration that were not there in the prototype. At this point either team can make necessary changes with both integration and the prototype in mind.&lt;/p&gt;

</description>
        <pubDate>Mon, 02 Mar 2015 07:00:00 -0600</pubDate>
        <link>http://blog.getsetbro.com/prototype-driven-development.html</link>
        <guid isPermaLink="true">http://blog.getsetbro.com/prototype-driven-development.html</guid>
        
        
      </item>
    
      <item>
        <title>The SVG tutorial that will make it click</title>
        <description>&lt;p&gt;When you want a shape in your webapp that is responsive and looks sharp at any size SVG is the way to go but where would you start? Here are some steps that can get you something useable and hopefully make some concepts around SVG click for you. There is much more to it, of course, but this might get you off and running.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Optional: Logon to your favorite web browser&lt;/li&gt;
  &lt;li&gt;Head to an online SVG generator such as &lt;a href=&quot;//editor.method.ac&quot;&gt;//editor.method.ac&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Half way down, on the left, choose a shape from the shape library.
        &lt;ul&gt;
          &lt;li&gt;Some shapes have a lot of code behind them so choose a simple one like the triangle.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Now draw it on the canvas with the shift key pressed so I keeps a square ratio for the width and height. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How big to draw? For this lets make it around 200 X 200. A big SVG object can have a lot of nice detail. But if the page ever lost the CSS that tells the large SVG to be a small icon then your visitor will be looking at a page full of SVG.&lt;/p&gt;

&lt;p&gt;Notice that under the view menu you can see the source of the shape that you just drew.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Before you export be sure to change the canvas size to match the content.
    &lt;ul&gt;
      &lt;li&gt;This makes it so we don’t have extra unused space in our file.
        &lt;ul&gt;
          &lt;li&gt;and we will be able to tell what size the shape is by the width and height shown in the SVG attributes. You will see what I mean.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Make sure no SVG shapes are selected by choosing the Arrow tool and clicking outside of the shape and seeing the selection box goes away.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;On the right, under canvas, choose “Fit to Content” from the sizes drop-down.
    &lt;ul&gt;
      &lt;li&gt;If it already on “Fit to Content” you need to select something else and then again choose “Fit to Content”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;View the source
    &lt;ul&gt;
      &lt;li&gt;from the View menu and copy the code of the SVG file.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Now paste it in a new bin somewhere like &lt;a href=&quot;//jsbin.com&quot;&gt;//jsbin.com&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;What you have is static sized SVG shape that does not resize. Next we’ll fix that.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The beginning of your SVG code looks like this&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&amp;lt;svg width=&amp;quot;189&amp;quot; height=&amp;quot;165&amp;quot;...&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;This is the width and height of the contents.
    &lt;ul&gt;
      &lt;li&gt;Add the viewBox attribute to the SVG element using the width and height attribute values:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&amp;lt;svg width=&amp;quot;189&amp;quot; height=&amp;quot;165&amp;quot; viewBox=&amp;quot;0 0 189 165&amp;quot;&amp;gt;&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;Now change the width and height to 100%&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&amp;lt;svg width=&amp;quot;100%&amp;quot; height=&amp;quot;100%&amp;quot; viewBox=&amp;quot;0 0 189 165&amp;quot;&amp;gt;&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;You now have a shape that scales and responds to its confines.
    &lt;ul&gt;
      &lt;li&gt;Now the problem becomes what its confines are&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Understand how the viewBox wants to use the width and height of the contents inside of it.
    &lt;ul&gt;
      &lt;li&gt;If you use numbers bigger than the contents you will have wasted space.
        &lt;ul&gt;
          &lt;li&gt;If you use numbers that are smaller than the contents you will cut off part of the contents.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Try putting it into a bootstrap grid and see what you’ve got&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe src=&quot;http://jsbin.com/dogeno/1/embed?output&quot; style=&quot;border: 1px solid rgb(170, 170, 170); width: 100%; min-height: 330px; height: 330px;&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;http://jsbin.com/dogeno/1/embed?html&quot; style=&quot;border: 1px solid rgb(170, 170, 170); width: 100%; min-height: 330px; height: 330px;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Notice that I stripped everything but the SVG and the PATH. The Title and G elements have there place but for this we are not in need of them.&lt;/p&gt;

&lt;p&gt;I wont go into what this tag does but it’s a good thing: preserveAspectRatio=”xMidYMid meet”&lt;/p&gt;

&lt;p&gt;To put it simply, to make a SVG element responsive the width &amp;amp; height move to the viewBox &amp;amp; change them to 100%.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//pbs.twimg.com/media/B-4asHkUcAE42Kv.png&quot; alt=&quot;svg&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Mar 2015 07:00:00 -0600</pubDate>
        <link>http://blog.getsetbro.com/js/the-svg-tutorial-that-will-make-it-click.html</link>
        <guid isPermaLink="true">http://blog.getsetbro.com/js/the-svg-tutorial-that-will-make-it-click.html</guid>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>React vs ReactiveJS vs RactiveJS vs ReactiveUI vs ReactiveX</title>
        <description>&lt;p&gt;What do these things have in common? They sound the same. They are, in fact, different from each other. It will take a lot to learn all about each but for now this will serve to make you ask the question “Which React?”&lt;/p&gt;

&lt;p&gt;The main reason for this post is I have seen so so many mention “&lt;a href=&quot;//twitter.com/reactivejs/status/569619957362888704&quot;&gt;ReactiveJS&lt;/a&gt;” and then they link to “RactiveJS.”&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;//facebook.github.io/react&quot;&gt;Facebook React&lt;/a&gt;&lt;/strong&gt; - This one started it all. “React is a JavaScript library created by a collaboration of Facebook and Instagram. Its aim is to allow developers to create fast user interfaces easily.”
Here is an intro - &lt;a href=&quot;//developer.telerik.com/featured/introduction-to-the-react-javascript-framework&quot;&gt;//developer.telerik.com/featured/introduction-to-the-react-javascript-framework&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;//github.com/mattbaker/Reactive.js&quot;&gt;ReactiveJS&lt;/a&gt;&lt;/strong&gt; - There are several that have created a library with the name. None of them have grabbed the domain for it. I give it to this one. It’s the first [relevant] google result. “Reactive.js will augment (“reactify”) a given Javascript function so that it may track dependencies on other reactive functions. You might think of a reactive function as representing a cell in a spreadsheet…” &lt;a href=&quot;//github.com/mattbaker/Reactive.js&quot;&gt;//github.com/mattbaker/Reactive.js&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;//www.ractivejs.org&quot;&gt;RactiveJS&lt;/a&gt;&lt;/strong&gt; - “The Web UI library for perfectionists with deadlines.”
Here is a article on React vs Ractive - via Ractive &lt;a href=&quot;//blog.ractivejs.org/posts/whats-the-difference-between-react-and-ractive&quot;&gt;//blog.ractivejs.org/posts/whats-the-difference-between-react-and-ractive&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;//github.com/reactiveui/ReactiveUI&quot;&gt;ReactiveUI&lt;/a&gt;&lt;/strong&gt; - For building with the &lt;a href=&quot;//xamarin.com&quot;&gt;Xamarin Platform&lt;/a&gt;. “A framework that integrates with the Reactive Extensions for .NET to create elegant, testable User Interfaces that run on any mobile or desktop platform.”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;//reactive-extensions.github.io/RxJS&quot;&gt;ReactiveX (RxJS)&lt;/a&gt;&lt;/strong&gt; - or Reactive Extensions (Rx). For building with the &lt;a href=&quot;//xamarin.com&quot;&gt;Xamarin Platform&lt;/a&gt;. “An API for asynchronous programming with observable streams” It’s the JS “flavor” of Reactive Extensions which is “is a library to compose asynchronous and event-based programs using observable collections and LINQ-style query operators.” &lt;a href=&quot;//rx.codeplex.com&quot;&gt;//rx.codeplex.com&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;//reactnative.com&quot;&gt;React Native&lt;/a&gt;&lt;/strong&gt; - Facebook again. “Build native iOS and Android apps with JavaScript” with React. The home page points to twitter &lt;a href=&quot;//twitter.com/reactjs&quot;&gt;@reactjs&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 25 Feb 2015 07:00:00 -0600</pubDate>
        <link>http://blog.getsetbro.com/js/FB-react-vs-reactiveJS-vs-ractiveJS-vs-reactiveUI-vs-reactiveX.html</link>
        <guid isPermaLink="true">http://blog.getsetbro.com/js/FB-react-vs-reactiveJS-vs-ractiveJS-vs-reactiveUI-vs-reactiveX.html</guid>
        
        
        <category>js</category>
        
      </item>
    
  </channel>
</rss>
